#!/usr/bin/env bash
#
#########################
#
# Copyright (C) 2012 Vittorio Cagnetta
# Copyright (C) 2012 Davide Depau
#
# Author: Vittorio Cagnetta <vaisarger@gmail.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with this program, 
# called, in this distribution, "bashkaraoke-LICENSE"; if not, write to the 
# Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.
#
#########################
#
###################
#
start_dir="$(pwd)"
	system_bk_dir="/usr/local/share/bashkaraoke"
	if [ -d "${system_bk_dir}" ]
		then
		dir="${system_bk_dir}"
	else
		[ -f "${0}" ] && \
			dir="$(dirname "${0}" )" || \
			dir="$(dirname "$(type -P "${0}" )" )"
	fi
	cd "${dir}"
	#
	[ ${#dir_Karaoke} -gt 0 ] || \
	source "$(pwd)/bashkaraoke_FILES/bashkaraoke_COMMON"
	#
cd "${start_dir}"
#
###################
USAGE="NO"
[ ${#} -eq 0 ] && USAGE="YES"
[ ! -f "${1}" ] && USAGE="YES"
if [ "${USAGE}" = "YES" ]
	then
	echo "Usage..."
	echo -e "To see lyric:\n>$(basename "${0}" ) \"[midi-file]\" 2>/dev/null"
	echo -e "To debug:\n>$(basename "${0}" ) \"[midi-file]\" 2>&1 | less"
	echo
	exit 1
fi
###################
# ...variabili
midi="${1}"
: "LANG = ${LANG}"
#
cat__international_chars()
	{
	gsed s\#"M-4"#"'"#g | \
	gsed s\#"M-^R"#"'"#g | \
	gsed s\#'M-`'#'à'#g | \
	gsed s\#'M-a'#'á'#g | \
	gsed s\#'M-h'#'è'#g | \
	gsed s\#'M-i'#'é'#g | \
	gsed s\#'M-l'#'ì'#g | \
	gsed s\#'M-m'#'í'#g | \
	gsed s\#'M-r'#'ò'#g | \
	gsed s\#'M-s'#'ó'#g | \
	gsed s\#'M-y'#'ù'#g | \
	gsed s\#'M-z'#'ú'#g | \
	gsed s\#'M-H'#'È'#g     
	}
togli_accordi()
	{
	testo="${1}"
	echo $(echo "${testo}"  | tr ' ' '\n' | gsed s\^'%.*'^''^g )
	}
togli_intestazione()
	{
	testo="${1}"
	echo "${testo#@*/}"
	}
#############################################
#
text="M-^?^A"
lyric="M-^?^E"
#
echo -e "$(basename "${midi}" )"
for field in text lyric
	do
	echo -e "\n\"${field}\" field :\n---------------------------------------"
	#
	#
	#
	cat -v "${midi}" | \
	cat__international_chars | \
	tr '\\' '/' | \
	tr '\n' '\\' | gsed s\#'\\'#'^J'#g | \
	gsed s\#"${!field}"#'\nATREASUREINSIDEANDSTRONGOUTSIDEMYPOWERISTHESHELL'#g | \
	gsed -n s\#'ATREASUREINSIDEANDSTRONGOUTSIDEMYPOWERISTHESHELL\(.*\)'#'\1'#p | \
	cut -d '^' -f 1,2,3 | \
	(
	IFS=$'\n'
	while read -r riga1
		do
		echo -e "\n\n\n\${riga1} e': \"${riga1}\" ..." 1>&2
		#
		primo_char="${riga1:0:1}"
		if [ "${primo_char}" = "^" ]
			then
			char="${riga1:1:1}"
			codice_ascii=$(printf "%o" "'${char}" )
			numero_caratteri=$(( 8#${codice_ascii} - 8#100 ))
			echo -e "\${numero_caratteri} e': \"${numero_caratteri}\" ..." 1>&2
			if [ ${numero_caratteri} -ge 0 ]
				then
				#
				echo -e "1 caso..." 1>&2
				echo -e "${riga1:2:${numero_caratteri}}" 1>&2
				echo -e "${riga1:2:${numero_caratteri}}"
				#
			else
				#
				echo -e "2 caso..." 1>&2
				char="$(echo -e "\x${char}" )"
				codice_ascii=$(printf "%o" "'${char}" )
				numero_caratteri=$(( 8#${codice_ascii} - 8#100 ))
				echo -e "${riga1:2:${numero_caratteri}}" 1>&2
				echo -e "${riga1:2:${numero_caratteri}}"
				#
			fi
			#
		else
			#
			echo -e "\"else\" caso..." 1>&2
			char="${riga1:0:1}"
			numero_caratteri=$(printf "%d" "'${char}" )
			echo -e "${riga1:1:${numero_caratteri}}" 1>&2
			echo -e "${riga1:1:${numero_caratteri}}"
			#
		fi
		#
	done ) | \
	gsed s\#'M-\^[A-G]'#' ^'#g | \
	gsed s\#'.M-\^[H-Z]'#' ^'#g | \
	gsed s\#'M-'#' ^'#g | \
	cut -d '^' -f 1 | \
	tr '\t' ' ' | tr -s ' ' | tr '<' ' / ' | \
	gsed s\#'@K'#'\nInfo: '# | \
	gsed s\#'@L'#'\nLanguage: '# | \
	gsed s\#'@T'#'\n*** '#g | \
	gsed s\#'@[[:upper:]]'#'\n'#g | \
	(
	IFS=$'\n'
	while read -r riga2
		do
		if [ ${#riga2} -eq 0 ]
			then
			echo -n "/"
		else
			echo -n "${riga2}"
		fi
	done
	)
	echo -e "\n---------------------------------------"
	echo
done | \
gsed s\#'\(\.\+\)'#'\1/'#g | \
gsed s\#'\(?\+\)'#'\1/'#g | \
tr '/' '\n' 


