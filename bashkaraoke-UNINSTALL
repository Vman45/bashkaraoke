#!/usr/bin/env bash
#
#########################
#
# Copyright (C) 2013 Vittorio Cagnetta
#
# Author: Vittorio Cagnetta <vaisarger@gmail.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with this program, 
# called, in this distribution, "bashkaraoke-LICENSE"; if not, write to the 
# Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.
#
#########################
#
export system_bk_dir="/usr/share/bashkaraoke"
export dir_Karaoke=".config/bashkaraoke"
export path_dir="/usr/bin"
source easybashgui
#
#############################################
# CHECKS
# ...lang?
lang="$(set | grep 'LANG=' | cut -d '=' -f 2 )"
if [ ${#lang} -gt 0 ]
	then
	l="$(if [ $(echo -n "${lang}" | grep -i "it" | wc -c) -gt 0 ]
		then
		echo "IT"
	else
		echo "EN"
	fi )"
else
	l="EN"
fi
export l
#
# ...easybashgui?
# -> SURE there is it... ;-)
#
# ...am I root?
if [ "$(whoami)" != "root" ]
	then
	[ "${l}" = "IT" ] && alert_message "Devi essere \"root\". \n\n Per favore, digita \"su\", quindi rilancia questo programma."
	[ "${l}" = "EN" ] && alert_message "You must be \"root\". \n\n Please, type \"su\", then relaunch this program."
	clean_temp
	exit 1
fi
#
#############################################
#
# 1)
for file in "${path_dir}/bashkaraoke" "${path_dir}/hyperkar" "${path_dir}/xtermkar" "${path_dir}/bk-extractor"
	do
	if [ -f "${file}" ]
		then
		rm "${file}"
	else
		alert_message "NO \"${file}\" ..."
	fi
done
for old in /usr/local/bin/bashkaraoke /usr/local/bin/bashkar /usr/local/bin/bk-extractor
	do
	[ -f "${old}" ] && rm "${old}"
	:
done
#
# 2)
IFS=$'\n' ; array_home_dirs=( $(ls -1 /home ) ) ; IFS=$' \t\n'
for dir in "${system_bk_dir}" $(for ((i=0 ; i < ${#array_home_dirs[@]} ; i++)); do echo -n "/home/${array_home_dirs[${i}]}/${dir_Karaoke} " ; done )
	do
	if [ -d "${dir}" ]
		then
		if [ "${dir}" != "/" -a "${dir}" != "/usr/share" -a "${dir}" != "${HOME}" ]
			then
			if [ "${l}" = "IT" ]
				then
				question "Devo lanciare \n questo comando: \n \"rm -fR "${dir}"\" \n\n Continuo ?"
				risposta=${?}
			elif [ "${l}" = "EN" ]
				then
				question "I have to launch \n this command: \n \"rm -fR "${dir}"\" \n\n Continue ?"
				risposta=${?}
			fi
			if [ ${risposta} -eq 0 ]
				then
				rm -fR "${dir}"
			elif [ ${risposta} -eq 1 ]
				then
				if [ "${l}" = "IT" ]
					then
					ok_message "${dir} \n non e' stata rimossa."
				elif [ "${l}" = "EN" ]
					then
					ok_message "${dir} \n was not removed."
				fi
			else
				:
			fi
			#
		fi #
		#
	fi #
	#
done
[ -d "/usr/local/share/bashkaraoke" ] && rm -fR /usr/local/share/bashkaraoke
#
ok_message "BashKaraoke unistalled."
clean_temp


