#!/usr/bin/env bash
#
#########################
#
# Copyright (C) 2013 Vittorio Cagnetta
# Copyright (C) 2013 Davide Depau
#
# Author: Vittorio Cagnetta <vaisarger@gmail.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with this program, 
# called, in this distribution, "bashkaraoke-LICENSE"; if not, write to the 
# Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.
#
#########################
#
###################
#
start_dir="$(pwd)"
	system_bk_dir="/usr/share/bashkaraoke"
	if [ -d "${system_bk_dir}" ]
		then
		dir="${system_bk_dir}"
	else
		[ -f "${0}" ] && \
			dir="$(dirname "${0}" )" || \
			dir="$(dirname "$(type -P "${0}" )" )"
	fi
	cd "${dir}"
	#
	export bk_COMMON="$(pwd)/bashkaraoke_FILES/bashkaraoke_COMMON"
	source "${bk_COMMON}"
	#
cd "${start_dir}"
#
###################
#
uso()
	{
	if [ "${l}" = "IT" ] 
		then
		echo -e "Uso:>$(basename "${0}" ) <OPZIONI> [MIDI file]" 1>&2
		echo -e "\tDove per <OPZIONI> si intende:" 1>&2
		echo -e "\t-h\t\t=>\tsignifica \"help\":" 1>&2
		echo -e "\t\t\t\tscrivi a schermo questo messaggio ed esci" 1>&2
		echo -e "\t" 1>&2
		echo -e "\t-m\t\t=>\tsignifica \"modalita' campo\":" 1>&2
		echo -e "\t\t\t\t\t( \"t\" => \"text\" oppure \"l\" => \"lyric\" oppure \"a\" => \"all=tutt'e due\", default = \"a\" )" 1>&2
		echo -e "\n" 1>&2
		#
	elif [ "${l}" = "EN" ] 
		then
		echo -e "Usage:>$(basename "${0}" ) <OPTIONS> [MIDI file]" 1>&2
		echo -e "\tWhere <OPTIONS> are:" 1>&2
		echo -e "\t-h\t\t=>\tis \"help\":" 1>&2
		echo -e "\t\t\t\tprint this message and exit" 1>&2
		echo -e "\t" 1>&2
		echo -e "\t-m\t\t=>\tis \"field mode\":" 1>&2
		echo -e "\t\t\t\t\t( \"t\" => \"text\" or \"l\" => \"lyric\" or \"a\" => \"all\", default = \"a\" )" 1>&2
		echo -e "\n" 1>&2
		#
	fi
	#
	clean_temp
	exit 1
	#
	}
#
###################
#
quante_opzioni=0
while getopts ":m:h" opzione
	do
	quante_opzioni=$((${quante_opzioni} + 1))
	case ${opzione} in
	 "m" )
		if [ "${OPTARG}" = "t" -o "${OPTARG}" = "l" -o "${OPTARG}" = "a" ]; then export field_mode=${OPTARG} ; \
		else uso ; \
		fi ;;
	 "h" )
		uso ;;

	 * )
		uso ;;
	esac
done
shift $((${OPTIND} - 1))
#
[ ${#field_mode} -eq 0 ] && field_mode="a"
: field_mode
#
if [ ${#} -eq 0 ]
	then
	uso
else
	midi="${1}"
	basename_midi="$(basename "${midi}" )"
	cd "$(dirname "${midi}" )"
		dir_midi="$(pwd)"
		midi="${dir_midi}/${basename_midi}"
	cd - 1>/dev/null
fi
if [ ! -f "${midi}" ]
	then
	uso
else
	if [ ! -r "${midi}" ]
		then
		uso
	fi
fi
: "LANG = ${LANG}"
: columns
export soglia=$(( ${columns} / 3 ))
: soglia
#
#############################################
#
if [ "${field_mode}" = "t" ]
	then
	fields_to_extract="--text"
elif [ "${field_mode}" = "l" ]
	then
	fields_to_extract="--lyric"
elif [ "${field_mode}" = "a" ]
	then
	fields_to_extract="--text --lyric"
fi
#
for field_to_extract in ${fields_to_extract}
	do
	extract__internal "${field_to_extract}" "${midi}"
done


